version: '3.9'
name: tp2
services:
  rabbitmq:
    build:
      context: ./containers/rabbitmq
      dockerfile: Dockerfile
    ports:
      - "15672:15672"
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 50s

  gateway:
    container_name: gateway
    build:
      context: ./containers
      dockerfile: gateway/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    entrypoint: python3 /opt/app/gateway.py
    environment:
      - PYTHONHASHSEED=0
      - WEATHER_SIDE_TABLE_QUEUE_NAME=publish_weather
      - STATION_SIDE_TABLE_QUEUE_NAME=publish_station


  response_provider:
    container_name: response_provider
    build:
      context: ./containers
      dockerfile: response_provider/Dockerfile
    entrypoint: python3 /opt/app/response_provider.py
    depends_on:
      rabbitmq:
        condition: service_healthy

  client:
    build:
      context: ./containers
      dockerfile: client/Dockerfile
    entrypoint: python3 /opt/app/client.py
    depends_on:
      - gateway
    environment:
      - PYTHONUNBUFFERED=1
      - DATA_FOLDER_PATH=/opt/app/.data
      - PUSH_QUEUE=client_in
      - REQ_ADDR=tcp://response_provider:5555
      - CITIES=montreal,washington,toronto
    volumes:
      - ./.data_3/:/opt/app/.data/

  synchronizer:
    build:
      context: ./containers
      dockerfile: synchronizer/Dockerfile
    entrypoint: python3 /opt/app/synchronizer.py
    depends_on:
      rabbitmq:
        condition: service_healthy

  weather_aggregator:
    build:
      context: ./containers
      dockerfile: weather_aggregator/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    entrypoint: python3 /opt/app/weather_aggregator.py
    environment:
      - PYTHONHASHSEED=0
      - SIDE_TABLE_QUEUE_NAME=publish_weather

  station_aggregator:
    build:
      context: ./containers
      dockerfile: station_aggregator/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    entrypoint: python3 /opt/app/station_aggregator.py
    environment:
      - PYTHONHASHSEED=0
      - SIDE_TABLE_QUEUE_NAME=publish_station

  prec_filter:
    build:
      context: ./containers
      dockerfile: prec_filter/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    entrypoint: python3 /opt/app/prec_filter.py
    environment:
      - PYTHONHASHSEED=0
      - PREC_LIMIT=30

  dur_avg_provider:
    build:
      context: ./containers
      dockerfile: dur_avg_provider/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    entrypoint: python3 /opt/app/dur_avg_provider.py
    environment:
      - PYTHONHASHSEED=0

  distance_calculator:
    build:
      context: ./containers
      dockerfile: distance_calculator/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    entrypoint: python3 /opt/app/distance_calculator.py
    environment:
      - PYTHONHASHSEED=0

  dist_mean_calculator:
    build:
      context: ./containers
      dockerfile: dist_mean_calculator/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    entrypoint: python3 /opt/app/dist_mean_calculator.py
    environment:
      - PYTHONHASHSEED=0

  dist_mean_provider:
    build:
      context: ./containers
      dockerfile: dist_mean_provider/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    entrypoint: python3 /opt/app/dist_mean_provider.py
    environment:
      - PYTHONHASHSEED=0
      - MEAN_THRESHOLD=6.0

  year_filter:
    build:
      context: ./containers
      dockerfile: year_filter/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    entrypoint: python3 /opt/app/year_filter.py
    environment:
      - PYTHONHASHSEED=0

  trips_counter:
    build:
      context: ./containers
      dockerfile: trips_counter/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    entrypoint: python3 /opt/app/trips_counter.py
    environment:
      - PYTHONHASHSEED=0

  trip_count_provider:
    build:
      context: ./containers
      dockerfile: trip_count_provider/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    entrypoint: python3 /opt/app/trip_count_provider.py
    environment:
      - PYTHONHASHSEED=0
      - MULT_THRESHOLD=2