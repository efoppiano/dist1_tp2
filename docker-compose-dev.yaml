version: "3.9"
name: tp2
services:

  rabbitmq:
    build:
      context: ./containers/rabbitmq
      dockerfile: Dockerfile
    ports:
      - 15672:15672
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 50s

  gateway_0:
    build:
      context: ./containers
      dockerfile: gateway/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    entrypoint: python3 /opt/app/gateway.py
    volumes:
      - .volumes/gateway_0:/volumes
    environment:
      - PYTHONHASHSEED=0
      - PYTHONUNBUFFERED=1
      - INPUT_QUEUE=gateway_0
      - EOF_ROUTING_KEY=gateway
      - HEALTH_CHECKER=health_checker_0
      - CONTAINER_ID=gateway_0
      - PREV_AMOUNT=1
      - NEXT=weather_aggregator
      - NEXT_AMOUNT=2
      - WEATHER_SIDE_TABLE_QUEUE_NAME=publish_weather
      - STATION_SIDE_TABLE_QUEUE_NAME=publish_station

  gateway_1:
    build:
      context: ./containers
      dockerfile: gateway/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    entrypoint: python3 /opt/app/gateway.py
    volumes:
      - .volumes/gateway_1:/volumes
    environment:
      - PYTHONHASHSEED=0
      - PYTHONUNBUFFERED=1
      - INPUT_QUEUE=gateway_1
      - EOF_ROUTING_KEY=gateway
      - HEALTH_CHECKER=health_checker_1
      - CONTAINER_ID=gateway_1
      - PREV_AMOUNT=1
      - NEXT=weather_aggregator
      - NEXT_AMOUNT=2
      - WEATHER_SIDE_TABLE_QUEUE_NAME=publish_weather
      - STATION_SIDE_TABLE_QUEUE_NAME=publish_station

  weather_aggregator_0:
    build:
      context: ./containers
      dockerfile: weather_aggregator/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    entrypoint: python3 /opt/app/weather_aggregator.py
    volumes:
      - .volumes/weather_aggregator_0:/volumes
    environment:
      - PYTHONHASHSEED=0
      - PYTHONUNBUFFERED=1
      - INPUT_QUEUE=weather_aggregator_0
      - EOF_ROUTING_KEY=weather_aggregator
      - HEALTH_CHECKER=health_checker_2
      - CONTAINER_ID=weather_aggregator_0
      - PREV_AMOUNT=1
      - NEXT=station_aggregator
      - NEXT_AMOUNT=3
      - SIDE_TABLE_ROUTING_KEY=weather

  weather_aggregator_1:
    build:
      context: ./containers
      dockerfile: weather_aggregator/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    entrypoint: python3 /opt/app/weather_aggregator.py
    volumes:
      - .volumes/weather_aggregator_1:/volumes
    environment:
      - PYTHONHASHSEED=0
      - PYTHONUNBUFFERED=1
      - INPUT_QUEUE=weather_aggregator_1
      - EOF_ROUTING_KEY=weather_aggregator
      - HEALTH_CHECKER=health_checker_3
      - CONTAINER_ID=weather_aggregator_1
      - PREV_AMOUNT=1
      - NEXT=station_aggregator
      - NEXT_AMOUNT=3
      - SIDE_TABLE_ROUTING_KEY=weather

  station_aggregator_0:
    build:
      context: ./containers
      dockerfile: station_aggregator/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    entrypoint: python3 /opt/app/station_aggregator.py
    volumes:
      - .volumes/station_aggregator_0:/volumes
    environment:
      - PYTHONHASHSEED=0
      - PYTHONUNBUFFERED=1
      - INPUT_QUEUE=station_aggregator_0
      - EOF_ROUTING_KEY=station_aggregator
      - HEALTH_CHECKER=health_checker_4
      - CONTAINER_ID=station_aggregator_0
      - PREV_AMOUNT=2
      - NEXT_AMOUNT_PREC_FILTER=2
      - NEXT_AMOUNT_YEAR_FILTER=2
      - NEXT_AMOUNT_DISTANCE_CALCULATOR=2
      - PREC_FILTER_QUEUE=prec_filter
      - YEAR_FILTER_QUEUE=year_filter
      - DISTANCE_CALCULATOR_QUEUE=distance_calculator
      - SIDE_TABLE_ROUTING_KEY=station

  station_aggregator_1:
    build:
      context: ./containers
      dockerfile: station_aggregator/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    entrypoint: python3 /opt/app/station_aggregator.py
    volumes:
      - .volumes/station_aggregator_1:/volumes
    environment:
      - PYTHONHASHSEED=0
      - PYTHONUNBUFFERED=1
      - INPUT_QUEUE=station_aggregator_1
      - EOF_ROUTING_KEY=station_aggregator
      - HEALTH_CHECKER=health_checker_0
      - CONTAINER_ID=station_aggregator_1
      - PREV_AMOUNT=2
      - NEXT_AMOUNT_PREC_FILTER=2
      - NEXT_AMOUNT_YEAR_FILTER=2
      - NEXT_AMOUNT_DISTANCE_CALCULATOR=2
      - PREC_FILTER_QUEUE=prec_filter
      - YEAR_FILTER_QUEUE=year_filter
      - DISTANCE_CALCULATOR_QUEUE=distance_calculator
      - SIDE_TABLE_ROUTING_KEY=station

  station_aggregator_2:
    build:
      context: ./containers
      dockerfile: station_aggregator/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    entrypoint: python3 /opt/app/station_aggregator.py
    volumes:
      - .volumes/station_aggregator_2:/volumes
    environment:
      - PYTHONHASHSEED=0
      - PYTHONUNBUFFERED=1
      - INPUT_QUEUE=station_aggregator_2
      - EOF_ROUTING_KEY=station_aggregator
      - HEALTH_CHECKER=health_checker_1
      - CONTAINER_ID=station_aggregator_2
      - PREV_AMOUNT=2
      - NEXT_AMOUNT_PREC_FILTER=2
      - NEXT_AMOUNT_YEAR_FILTER=2
      - NEXT_AMOUNT_DISTANCE_CALCULATOR=2
      - PREC_FILTER_QUEUE=prec_filter
      - YEAR_FILTER_QUEUE=year_filter
      - DISTANCE_CALCULATOR_QUEUE=distance_calculator
      - SIDE_TABLE_ROUTING_KEY=station

  prec_filter_0:
    build:
      context: ./containers
      dockerfile: prec_filter/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    entrypoint: python3 /opt/app/prec_filter.py
    volumes:
      - .volumes/prec_filter_0:/volumes
    environment:
      - PYTHONHASHSEED=0
      - PYTHONUNBUFFERED=1
      - INPUT_QUEUE=prec_filter_0
      - EOF_ROUTING_KEY=prec_filter
      - HEALTH_CHECKER=health_checker_2
      - CONTAINER_ID=prec_filter_0
      - PREV_AMOUNT=3
      - NEXT=dur_avg_provider
      - NEXT_AMOUNT=1
      - PREC_LIMIT=30

  prec_filter_1:
    build:
      context: ./containers
      dockerfile: prec_filter/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    entrypoint: python3 /opt/app/prec_filter.py
    volumes:
      - .volumes/prec_filter_1:/volumes
    environment:
      - PYTHONHASHSEED=0
      - PYTHONUNBUFFERED=1
      - INPUT_QUEUE=prec_filter_1
      - EOF_ROUTING_KEY=prec_filter
      - HEALTH_CHECKER=health_checker_3
      - CONTAINER_ID=prec_filter_1
      - PREV_AMOUNT=3
      - NEXT=dur_avg_provider
      - NEXT_AMOUNT=1
      - PREC_LIMIT=30

  dur_avg_provider_0:
    build:
      context: ./containers
      dockerfile: dur_avg_provider/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    entrypoint: python3 /opt/app/dur_avg_provider.py
    volumes:
      - .volumes/dur_avg_provider_0:/volumes
    environment:
      - PYTHONHASHSEED=0
      - PYTHONUNBUFFERED=1
      - INPUT_QUEUE=dur_avg_provider_0
      - EOF_ROUTING_KEY=dur_avg_provider
      - HEALTH_CHECKER=health_checker_4
      - CONTAINER_ID=dur_avg_provider_0
      - PREV_AMOUNT=2
      - NEXT=response_provider_dur_avg

  year_filter_0:
    build:
      context: ./containers
      dockerfile: year_filter/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    entrypoint: python3 /opt/app/year_filter.py
    volumes:
      - .volumes/year_filter_0:/volumes
    environment:
      - PYTHONHASHSEED=0
      - PYTHONUNBUFFERED=1
      - INPUT_QUEUE=year_filter_0
      - EOF_ROUTING_KEY=year_filter
      - HEALTH_CHECKER=health_checker_0
      - CONTAINER_ID=year_filter_0
      - PREV_AMOUNT=3
      - NEXT=trips_counter
      - NEXT_AMOUNT=2

  year_filter_1:
    build:
      context: ./containers
      dockerfile: year_filter/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    entrypoint: python3 /opt/app/year_filter.py
    volumes:
      - .volumes/year_filter_1:/volumes
    environment:
      - PYTHONHASHSEED=0
      - PYTHONUNBUFFERED=1
      - INPUT_QUEUE=year_filter_1
      - EOF_ROUTING_KEY=year_filter
      - HEALTH_CHECKER=health_checker_1
      - CONTAINER_ID=year_filter_1
      - PREV_AMOUNT=3
      - NEXT=trips_counter
      - NEXT_AMOUNT=2

  trips_counter_0:
    build:
      context: ./containers
      dockerfile: trips_counter/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    entrypoint: python3 /opt/app/trips_counter.py
    volumes:
      - .volumes/trips_counter_0:/volumes
    environment:
      - PYTHONHASHSEED=0
      - PYTHONUNBUFFERED=1
      - INPUT_QUEUE=trips_counter_0
      - EOF_ROUTING_KEY=trips_counter
      - HEALTH_CHECKER=health_checker_2
      - CONTAINER_ID=trips_counter_0
      - PREV_AMOUNT=2
      - NEXT=trip_count_provider
      - NEXT_AMOUNT=1

  trips_counter_1:
    build:
      context: ./containers
      dockerfile: trips_counter/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    entrypoint: python3 /opt/app/trips_counter.py
    volumes:
      - .volumes/trips_counter_1:/volumes
    environment:
      - PYTHONHASHSEED=0
      - PYTHONUNBUFFERED=1
      - INPUT_QUEUE=trips_counter_1
      - EOF_ROUTING_KEY=trips_counter
      - HEALTH_CHECKER=health_checker_3
      - CONTAINER_ID=trips_counter_1
      - PREV_AMOUNT=2
      - NEXT=trip_count_provider
      - NEXT_AMOUNT=1

  trip_count_provider_0:
    build:
      context: ./containers
      dockerfile: trip_count_provider/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    entrypoint: python3 /opt/app/trip_count_provider.py
    volumes:
      - .volumes/trip_count_provider_0:/volumes
    environment:
      - PYTHONHASHSEED=0
      - PYTHONUNBUFFERED=1
      - INPUT_QUEUE=trip_count_provider_0
      - EOF_ROUTING_KEY=trip_count_provider
      - HEALTH_CHECKER=health_checker_4
      - CONTAINER_ID=trip_count_provider_0
      - PREV_AMOUNT=2
      - NEXT=response_provider_trip_count
      - MULT_THRESHOLD=2

  distance_calculator_0:
    build:
      context: ./containers
      dockerfile: distance_calculator/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    entrypoint: python3 /opt/app/distance_calculator.py
    volumes:
      - .volumes/distance_calculator_0:/volumes
    environment:
      - PYTHONHASHSEED=0
      - PYTHONUNBUFFERED=1
      - INPUT_QUEUE=distance_calculator_0
      - EOF_ROUTING_KEY=distance_calculator
      - HEALTH_CHECKER=health_checker_0
      - CONTAINER_ID=distance_calculator_0
      - PREV_AMOUNT=3
      - NEXT=dist_mean_calculator
      - NEXT_AMOUNT=2

  distance_calculator_1:
    build:
      context: ./containers
      dockerfile: distance_calculator/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    entrypoint: python3 /opt/app/distance_calculator.py
    volumes:
      - .volumes/distance_calculator_1:/volumes
    environment:
      - PYTHONHASHSEED=0
      - PYTHONUNBUFFERED=1
      - INPUT_QUEUE=distance_calculator_1
      - EOF_ROUTING_KEY=distance_calculator
      - HEALTH_CHECKER=health_checker_1
      - CONTAINER_ID=distance_calculator_1
      - PREV_AMOUNT=3
      - NEXT=dist_mean_calculator
      - NEXT_AMOUNT=2

  dist_mean_calculator_0:
    build:
      context: ./containers
      dockerfile: dist_mean_calculator/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    entrypoint: python3 /opt/app/dist_mean_calculator.py
    volumes:
      - .volumes/dist_mean_calculator_0:/volumes
    environment:
      - PYTHONHASHSEED=0
      - PYTHONUNBUFFERED=1
      - INPUT_QUEUE=dist_mean_calculator_0
      - EOF_ROUTING_KEY=dist_mean_calculator
      - HEALTH_CHECKER=health_checker_2
      - CONTAINER_ID=dist_mean_calculator_0
      - PREV_AMOUNT=2
      - NEXT=dist_mean_provider
      - NEXT_AMOUNT=1

  dist_mean_calculator_1:
    build:
      context: ./containers
      dockerfile: dist_mean_calculator/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    entrypoint: python3 /opt/app/dist_mean_calculator.py
    volumes:
      - .volumes/dist_mean_calculator_1:/volumes
    environment:
      - PYTHONHASHSEED=0
      - PYTHONUNBUFFERED=1
      - INPUT_QUEUE=dist_mean_calculator_1
      - EOF_ROUTING_KEY=dist_mean_calculator
      - HEALTH_CHECKER=health_checker_3
      - CONTAINER_ID=dist_mean_calculator_1
      - PREV_AMOUNT=2
      - NEXT=dist_mean_provider
      - NEXT_AMOUNT=1

  dist_mean_provider_0:
    build:
      context: ./containers
      dockerfile: dist_mean_provider/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    entrypoint: python3 /opt/app/dist_mean_provider.py
    volumes:
      - .volumes/dist_mean_provider_0:/volumes
    environment:
      - PYTHONHASHSEED=0
      - PYTHONUNBUFFERED=1
      - INPUT_QUEUE=dist_mean_provider_0
      - EOF_ROUTING_KEY=dist_mean_provider
      - HEALTH_CHECKER=health_checker_4
      - CONTAINER_ID=dist_mean_provider_0
      - PREV_AMOUNT=2
      - NEXT=response_provider_dist_mean
      - MEAN_THRESHOLD=6.0

  response_provider:
    build:
      context: ./containers
      dockerfile: response_provider/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    entrypoint: python3 /opt/app/response_provider.py
    volumes:
      - .volumes/response_provider:/volumes
    environment:
      - PYTHONHASHSEED=0
      - PYTHONUNBUFFERED=1
      - HEALTH_CHECKER=health_checker_0
      - CONTAINER_ID=response_provider
      - DIST_MEAN_SRC=response_provider_dist_mean
      - DIST_MEAN_AMOUNT=1
      - TRIP_COUNT_SRC=response_provider_trip_count
      - TRIP_COUNT_AMOUNT=1
      - DUR_AVG_SRC=response_provider_dur_avg
      - DUR_AVG_AMOUNT=1

  health_checker_0:
    build:
      context: ./containers
      dockerfile: health_checker/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    entrypoint: python3 /opt/app/health_checker.py
    volumes:
      - .volumes/health_checker_0:/volumes
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - PYTHONHASHSEED=0
      - PYTHONUNBUFFERED=1
      - CONTAINERS=gateway_0,station_aggregator_1,year_filter_0,distance_calculator_0,response_provider,health_checker_1
      - HEALTH_CHECKER=health_checker_4
      - CONTAINER_ID=health_checker_0

  health_checker_1:
    build:
      context: ./containers
      dockerfile: health_checker/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    entrypoint: python3 /opt/app/health_checker.py
    volumes:
      - .volumes/health_checker_1:/volumes
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - PYTHONHASHSEED=0
      - PYTHONUNBUFFERED=1
      - CONTAINERS=gateway_1,station_aggregator_2,year_filter_1,distance_calculator_1,health_checker_2
      - HEALTH_CHECKER=health_checker_0
      - CONTAINER_ID=health_checker_1

  health_checker_2:
    build:
      context: ./containers
      dockerfile: health_checker/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    entrypoint: python3 /opt/app/health_checker.py
    volumes:
      - .volumes/health_checker_2:/volumes
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - PYTHONHASHSEED=0
      - PYTHONUNBUFFERED=1
      - CONTAINERS=weather_aggregator_0,prec_filter_0,trips_counter_0,dist_mean_calculator_0,health_checker_3
      - HEALTH_CHECKER=health_checker_1
      - CONTAINER_ID=health_checker_2

  health_checker_3:
    build:
      context: ./containers
      dockerfile: health_checker/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    entrypoint: python3 /opt/app/health_checker.py
    volumes:
      - .volumes/health_checker_3:/volumes
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - PYTHONHASHSEED=0
      - PYTHONUNBUFFERED=1
      - CONTAINERS=weather_aggregator_1,prec_filter_1,trips_counter_1,dist_mean_calculator_1,health_checker_4
      - HEALTH_CHECKER=health_checker_2
      - CONTAINER_ID=health_checker_3

  health_checker_4:
    build:
      context: ./containers
      dockerfile: health_checker/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    entrypoint: python3 /opt/app/health_checker.py
    volumes:
      - .volumes/health_checker_4:/volumes
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - PYTHONHASHSEED=0
      - PYTHONUNBUFFERED=1
      - CONTAINERS=station_aggregator_0,dur_avg_provider_0,trip_count_provider_0,dist_mean_provider_0,health_checker_0
      - HEALTH_CHECKER=health_checker_3
      - CONTAINER_ID=health_checker_4

  client_original:
    build:
      context: ./containers
      dockerfile: client/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    entrypoint: python3 /opt/app/client.py
    volumes:
      - ./.data_3/:/opt/app/.data/
    environment:
      - PYTHONHASHSEED=0
      - PYTHONUNBUFFERED=1
      - DATA_FOLDER_PATH=/opt/app/.data
      - CLIENT_ID=original
      - CITIES=montreal,washington,toronto
      - ID_REQ_QUEUE=client_id_queue
      - GATEWAY=gateway
      - GATEWAY_AMOUNT=2